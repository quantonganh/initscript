#!/usr/local/bash4/bin/bash
#
# redis - this script starts and stops the redis-server daemon
#
# chkconfig: - 85 15
# description: Redis is a persistent key-value database
# processname: redis-server

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

typeset -A SUBSYS

#PORTS="6379 6380 1111 1112 1113 6381 6311 6312"
PORTS="6379 6380 1111 1113 6381 6311 6312"
SUBSYS=([6379]="redis-sohathongtin" [6380]="redis-sohaphim" [1111]="cafef" [1112]="cafef-slave2" [1113]="cafef-gia" [6381]="sohaphim-details" [6311]="baamboo-queue" [6312]="sohamuzik-queue") 

#PORTS="6379 6380 1113 6381 6311 6312"
#SUBSYS=([6379]="redis-sohathongtin" [6380]="redis-sohaphim" [1113]="cafef-gia" [6381]="sohaphim-details" [6311]="baamboo-queue" [6312]="sohamuzik-queue") 

basedir="/usr/local/redis"
redis="redis-server"
prog=$redis
lockdir="$basedir/var/lock/subsys"

[ -f /etc/sysconfig/redis ] && . /etc/sysconfig/redis

function stop_redis()
{
	port=$1
	REDISPID=`cat $basedir"/var/run/"${SUBSYS[$port]}".pid"`
        if [ -n "$REDISPID" ]; then
		/bin/kill "$REDISPID" >/dev/null 2>&1
		retval=$?
		if [ $retval -eq 0 ]; then
			STOPTIMEOUT=60
			while [ $STOPTIMEOUT -gt 0 ]; do
				/bin/kill -0 "$REDISPID" >/dev/null 2>&1 || break
				sleep 1
				let STOPTIMEOUT=${STOPTIMEOUT}-1
			done
            if [ $STOPTIMEOUT -eq 0 ]; then
                echo "Timeout error occurred trying to stop Redis Daemon on port $port."
                retval=1
                action $"Stopping $prog on port $port..." /bin/false
            else
                rm -f $lockdir/${SUBSYS[$port]}
				rm -f $basedir/var/run/${SUBSYS[$port]}.pid
                action $"Stopping $prog on port $port..." /bin/true
            fi
        else
            action $"Stopping $prog on port $port..." /bin/false
        fi
    else
		echo "Redis daemon is not running on port: $port"
        retval=1
        action $"Stopping $prog on port $port..." /bin/false
    fi
}

function start_redis()
{
	port="$1"
	if [ -f "$basedir/var/run/${SUBSYS[$port]}.pid" ]; then
		echo "Redis on port $port is already running."
		action $"Starting $prog on port $port... " /bin/false
	else
		echo -n $"Starting $prog on port $port..."
    		daemon --user=redis $basedir/bin/$redis $basedir/etc/${SUBSYS[$port]}.conf
    		retval=$?
    		echo 
    		[ $retval -eq 0 ] && touch $lockdir/${SUBSYS[$port]}
	fi
}

case "$1" in
start)
	if [ -n "$2" ]; then
		start_redis $2
	else
		for port in $PORTS; do
	    	[ -x "$basedir/bin/$redis" ] || exit 5
	    	[ -f "$basedir/etc/${SUBSYS[$port]}.conf" ] || exit 6
			start_redis $port
		done
	fi
	;;

stop) 
	if [ -n "$2" ]; then
		port="$2"
		stop_redis $port;
        #return $retval
		#echo
	else
		for port in $PORTS; do
			stop_redis $port;
		done
		retval=$?
		echo
	fi
	;;

restart)
	if [ -n "$2" ]; then
		stop_redis $2
		start_redis $2
	else
		for port in $PORTS; do
			stop_redis $port
			start_redis $port
		done
	fi
	;;
*)
    echo $"Usage: $0 {start|stop|restart}"
    exit 2
	;;
esac
